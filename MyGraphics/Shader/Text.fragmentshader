#version 330 core

// Interpolated values from the vertex shaders
in vec4 fragmentColor;
in vec2 texCoord;

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform sampler2D colorTexture;		

const float width = 0.5;
const float edge = 0.15;

const float bwidth = 0.5;
const float bedge = 0.4;

const vec2 offset = vec2(-0.006, 0.006);

void main()
{
	float distance = 1.0 - texture( colorTexture, texCoord).a;
	float alpha = 1.0 - smoothstep(width, width + edge, distance);

	float distance2 = 1.0 - texture( colorTexture, texCoord + offset).a;
	float alpha2 = 1.0 - smoothstep(bwidth, bwidth + bedge, distance2);

	float finalAlpha = alpha + (1.0 - alpha) * alpha2;
	vec3 finalColor = mix(fragmentColor.xyz * 0.05, fragmentColor.xyz, alpha/alpha2);

	color =  vec4(finalColor, finalAlpha);

//	color = vec4(1,1,1,1)
}